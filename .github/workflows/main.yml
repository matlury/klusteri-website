name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        working-directory: ./backend
        run: pip install poetry

      - name: Install dependencies
        run: |
          cd backend
          poetry install
          cd ../frontend
          npm install

      - name: Make migrations
        working-directory: ./backend
        run: poetry run python manage.py migrate

      - name: Run tests
        working-directory: ./backend
        run: poetry run coverage run --branch -m pytest

      - name: Start backend
        run: |
          cd backend
          poetry run python manage.py runserver &

      - name: Run Cypress tests
        uses: cypress-io/github-action@v3
        with:
          working-directory: ./frontend
          project: ./
          browser: chrome
          build: npm run build
          start: npm run dev
        env:
          CYPRESS: "True"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage.xml,./frontend/coverage/clover.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

